"use strict";var Github={getEvents:function(t){return $.ajax({url:"https://api.github.com/users/"+t+"/events/public"})},getProfile:function(t){return $.ajax({url:"https://api.github.com/users/"+t})}},app={init:function(){$("input").focus(),this.addEventListeners()},addEventListeners:function(){var t=this;$("#github-form").submit(function(e){var n=$(this).find("input").val(),r=t.getUsername(n);return $("#progress-bar").removeClass("hide"),$.when(t.processEvents(r),t.processProfile(r)).done(function(){var e=_.uniq(_.flatten(arguments));t.render(e),$("#progress-bar").addClass("hide")}),!1})},getUsername:function(t){return t.match("github.com")?t.split("github.com/")[1].split("/")[0]:t},processEvents:function(t){var e=this;return Github.getEvents(t).then(function(t){var n=e.parseAndFilterEmails(t);return n})},processProfile:function(t){return Github.getProfile(t).then(function(t){return[t.email]})},parseAndFilterEmails:function(t){for(var e=[],n=0;n<t.length;n++)if("PushEvent"===t[n].type)try{e.push(t[n].payload.commits[0].author.email)}catch(r){}return _.uniq(e)},render:function(t){$(".result").removeClass("hide");var e=$(".emails-list");e.html("");for(var n=0;n<t.length;n++)t[n]&&t[n].length>1&&e.append("<li>"+t[n]+"</li>")}};app.init();